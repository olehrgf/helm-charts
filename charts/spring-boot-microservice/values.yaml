# Default values for spring-boot-microservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

appVersion: 0.0.1

replicaCount: 1

image:
  repository: amazoncorretto
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "17"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Optional map of annotations to be applied to the Deployment
annotations: {}

# -- Optional labels to add to the Deployment
labels: {}

# -- Optional map of annotations to be applied to the Pods
podAnnotations: {}

# -- Optional labels to add to the pods
podLabels: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  enabled: true
  type: ClusterIP
  httpPort: 80
  httpTargetPort: "8080"
  httpNodePort: null
  managementPort: 9090
  managementTargetPort: "9090"
  managementNodePort: null
  labels:
    prometheus.io/target: spring-boot-actuator-instance

extraEnv: []
#  - name: "ENV_VAR"
#    valueFrom:
#      secretKeyRef:
#        name: "some-secret-name"
#        key: "some-key"
#        optional: true

envFrom: []
#  - configMapRef:
#      name: ""
#      optional: true
#  - secretRef:
#      name: ""
#      optional: true

config:
  annotations: {}
  labels: {}
  log4j: |-
    Configuration:
      Appenders:
        Console:
          name: Console
          target: SYSTEM_OUT
          JsonLayout:
            compact: true
            eventEol: true
            includeTimeMillis: true

      Loggers:
        Root:
          level: INFO
          AppenderRef:
            - ref: Console
  application: {}

# Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.
# The default entrypoint for jib generated docker image is `java -cp @/app/jib-classpath-file @/app/jib-main-class-file`
command: []

# Arguments to the entrypoint.
args: []

jvmOptions:
  - -XX:+UseContainerSupport
  - -XX:MaxRAMPercentage=80.0
  - -Djava.net.preferIPv4Stack=true
  - -Djava.awt.headless=true
  - -Dspring.config.additional-location=/etc/config/app/application.yaml

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

livenessProbe:
  httpGet:
    path: /actuator/health/liveness
    port: "{{ .Values.service.managementPort }}"
  failureThreshold: 3
  periodSeconds: 15

readinessProbe:
  httpGet:
    path: /actuator/health/readiness
    port: "{{ .Values.service.managementPort }}"
  failureThreshold: 10
  periodSeconds: 15

startupProbe:
  httpGet:
    path: /actuator/health/readiness
    port: "{{ .Values.service.managementPort }}"
  failureThreshold: 10
  initialDelaySeconds: 15
  periodSeconds: 15

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

extraVolumeMounts: {}

extraVolumes: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: {}

affinity: {}

metricsConfig:
  # If `true`, a ServiceMonitor resource for the prometheus-operator is created
  enabled: false
  # Annotations for the ServiceMonitor
  annotations: {}
  # Additional labels for the ServiceMonitor
  labels: {}
  # Interval at which Prometheus scrapes metrics
  interval: 15s
  # Timeout for scraping
  scrapeTimeout: 15s
  # The path at which metrics are served
  path: /actuator/prometheus
  # The Service port at which metrics are served
  port: http-management
